/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    void helper(TreeNode* root,vector<vector<int>>&ans)
    {
        queue<TreeNode*>q;
        q.push(root);
        int level=0;
        int val=1;
        while(!q.empty())
        {
         int size=q.size();
            vector<int>v(size);
            for(int i=0;i<size;i++)
            {
              TreeNode* node = q.front();
                q.pop();
                if(level==0)
                {
                    v[i]=node->val;
                }
                else{
                    v[size-i-1]=node->val;
                }
                if(node->left)q.push(node->left);
                if(node->right)q.push(node->right);
                
         }
            ans.push_back(v);
            level=level==0?1:0;
        }
            
       }
    
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
           vector<vector<int>>ans;
        if(root==NULL)
        {
          return ans;  
        }
           if(root->left==NULL && root->right==NULL) {
            vector<int>v;
            v.push_back(root->val);
            ans.push_back(v);
               return ans;
            }
     
       helper(root,ans); 
        return ans;
    }
};
