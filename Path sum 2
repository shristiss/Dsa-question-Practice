/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    
    void helper(TreeNode *root,int target, vector<vector<int>>&ans,int s,vector<int>temp)
    {
        if(root==NULL)return;
        s+=root->val;
        temp.push_back(root->val);
        helper(root->left,target,ans,s,temp);
        if(s==target &&root->left==NULL && root->right==NULL)
        {
            ans.push_back(temp);
        }
        helper(root->right,target,ans,s,temp);
    }
public:
    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {
        int s=0;
         vector<vector<int>>ans;
        vector<int>temp;
        helper(root,targetSum,ans,s,temp);
        return ans;
        
    }
};
