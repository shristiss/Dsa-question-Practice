/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    void helper(TreeNode *root,int v,int depth,int d)
    {
        if(!root)return;
        if(d==depth-1)
        {
            TreeNode *node1=new TreeNode;
            node1->val=v;
            TreeNode *node2= new TreeNode;
            node2->val=v;
            node1->left=root->left;
            node2->right=root->right;
            root->left=node1;
            root->right=node2;
            return;
        }
        else {
           helper(root->left,v,depth,d+1);
            helper(root->right,v,depth,d+1);
        }
    }
public:
    TreeNode* addOneRow(TreeNode* root, int val, int depth) {
        if(depth==1)
        {
            TreeNode *newnode=new TreeNode;
            newnode->val=val;
            newnode->left=root;
            return newnode;
        }
        int d=1;
        helper(root,val,depth,d);
        return root;
    }
};
