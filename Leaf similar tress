/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    void inorder(vector<int>&v,TreeNode *root)
    {
        if(root)
        {
            inorder(v,root->left);
            if(root->left==NULL && root->right==NULL)v.push_back(root->val);
            inorder(v,root->right);
        }
    }
public:
    bool leafSimilar(TreeNode* root1, TreeNode* root2) {
        vector<int>v1;
        vector<int>v2;
        inorder(v1,root1);
        inorder(v2,root2);
        if(v1.size()!=v2.size())return false;
        int n=v1.size();
        int i=0;
        while(i<n)
        {
            if(v1[i]!=v2[i])return false;
            else i++;
        }
        return true;
    }
};
