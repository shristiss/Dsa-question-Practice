/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    unordered_set<int>s;
    vector<TreeNode *>ans;
    void helper(TreeNode* &root)
    {
        if(root==NULL)return;
        helper(root->left);
        helper(root->right);
        if(s.find(root->val)!=s.end())
        {
            if(root->left)ans.push_back(root->left);
            if(root->right)ans.push_back(root->right);
            root=NULL;
        }
        
    }
public:
    vector<TreeNode*> delNodes(TreeNode* root, vector<int>& to_delete) {
        for(auto &i:to_delete)
        {
            s.insert(i);
        }
        helper(root);
        if(root!=NULL && s.count(root->val)==0)ans.push_back(root);
        return ans;
    }
};
