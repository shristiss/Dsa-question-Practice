class Solution {
public:
    int minimumOperations(vector<int>& nums) {
      //   priority_queue<int,vector<int>,greater<int>>pq;
      //   for(int i=0;i<nums.size();i++)pq.push(nums[i]);
      //   int count=0,currmin=0;
      // while(!pq.empty())
      // {
      //     if(pq.top()==0)pq.pop();
      //     else {
      //         int xx=pq.top()-currmin;
      //         if(xx!=0)
      //         {
      //             currmin+=xx;
      //             count++;
      //         }
      //         pq.pop();
      //     }
      // }
      //   return count;
        set<int>s;
        for(int i=0;i<nums.size();i++)
        {
            if(nums[i]==0)continue;
            s.insert(nums[i]);
        }
        return s.size();
        
    }
};
        
