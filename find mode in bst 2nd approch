/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int>res;
    int currfreq=0,maxfreq=0,precursor=INT_MIN;
    vector<int> findMode(TreeNode* root) {
        inorder(root,res);
        return res;
    }
    void inorder(TreeNode*root,vector<int>&res)
    {
        if(root==NULL) return;
        inorder(root->left,res);
        if(precursor==root->val) currfreq++;
        else currfreq=1;
        if(currfreq>maxfreq)
        {
            res.clear();
            maxfreq=currfreq;
            res.push_back(root->val);
        }
       else if(currfreq==maxfreq)
       {
           res.push_back(root->val);
       }
        precursor=root->val;
        inorder(root->right,res);
    }
};
