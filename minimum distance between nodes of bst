/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    void findin(TreeNode*root,vector<int>&v)
    {
        if(root!=NULL)
        {
            findin(root->left,v);
            v.push_back(root->val);
            findin(root->right,v);
        }
    }
public:
    int minDiffInBST(TreeNode* root) {
        vector<int>v;
        findin(root,v);
        int minans=v[1]-v[0];
        for(int i=2;i<v.size();i++)
        {
            if(v[i]-v[i-1]<minans) minans=v[i]-v[i-1];
        }
        return minans;
    }
};
