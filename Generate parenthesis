class Solution {
    void helper(string ans,vector<string>&v,int open,int close,int n)
    {
        if(ans.length()==2*n)
        {
            v.push_back(ans);
            return;
        }
        if(open<n)
        {
            ans+='(';
            helper(ans,v,open+1,close,n);
            ans.pop_back();
        }
        if(close<open)
        {
            ans+=')';
            helper(ans,v,open,close+1,n);
            ans.pop_back();
        }
        
    }
public:
    vector<string> generateParenthesis(int n) {
        string ans="";
    vector<string>v;
        int open=0,close=0;
        helper(ans,v,open,close,n);
        return v;
        }
};
