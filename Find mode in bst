/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void preorder(TreeNode*root,unordered_map<int,int>&mp)
    {
        if(root==NULL)return;
        preorder(root->left,mp);
        mp[root->val]++;
        preorder(root->right,mp);
    }
    vector<int> findMode(TreeNode* root) {
        unordered_map<int,int>mp;
        vector<int>ans;
        preorder(root,mp);
        int maxans=INT_MIN;
        for(auto &it:mp)
        {
            maxans=max(it.second,maxans);
        }
        for(auto &i:mp)
        {
            if(i.second==maxans) ans.push_back(i.first);
        }
        return ans;
    }
};
