/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    void helper(TreeNode* root,vector<string>&v,string s)
    {
     if(!root)return; 
            s+=char(root->val+'a');
        if(root->left==NULL && root->right==NULL)
        {
             v.push_back(s);
            return;
        }
            helper(root->left,v,s);
        helper(root->right,v,s);

    }
public:
    string smallestFromLeaf(TreeNode* root) {
        vector<string>v;
        string s="";
        helper(root,v,s);
        for(auto &i:v)
        {
            reverse(i.begin(),i.end());
        }
        sort(v.begin(),v.end());
        return v[0];
    }
};
