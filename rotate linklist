/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        if(!head || !head->next)return head;
        if(k==0)return head;
        int n=0;
        ListNode *temp=head,*prev=NULL;
        while(temp)
        {
            n++;
            temp=temp->next;
        }
        temp=head;
        if(k>n)k=k%n;
        if(k==n || k==0)return head;
       
        int x=n-k;
        while(x--)
        {
            prev=temp;
            temp=temp->next;
        }
        ListNode *newnode=temp;
        while(temp->next!=NULL)
        {
            temp=temp->next;
        }
         prev->next=NULL;  
        temp->next=head;
        return newnode;
    }
};
