
 * };
 */
class Solution {
    void inorder(TreeNode *root,vector<int>&v)
    {
        if(root)
        {
            inorder(root->left,v);
            v.push_back(root->val);
            inorder(root->right,v);
        }
    }
    TreeNode* helper(vector<int>&v,int low,int high)
    {
        int size=high-low;
        if(size<0)return NULL;
        if(size==0) return new TreeNode(v[low]);
        int mid=(low+high)/2;
        TreeNode *root=new TreeNode(v[mid]);
        root->left=helper(v,low,mid-1);
        root->right=helper(v,mid+1,high);
        return root;
    }
public:
    TreeNode* balanceBST(TreeNode* root) {
        vector<int>v;
        inorder(root,v);
       return helper(v,0,v.size()-1);
    }
};
